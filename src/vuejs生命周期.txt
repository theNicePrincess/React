new Vue()   ------------->  new了一个Vue的实例对象，此时，会进入组件的创建过程。
    |
init Events & Lifecycle     初始化组件的时间和声明周四函数，当执行完这一步，组件的生命周期函数，就已经全部初始化好了，等待着一次去调用
    |
beforeCreate   这是第一个生命周期函数：此时data和methods以及页面DOM结构都 还没有初始化，所以这个阶段什么都做不了
    |
init injections & reactivity   这个阶段中，正在初始化 data 和methods中的数据以及方法
    |
created 这个组件创建阶段第二个生命周期函数，此时，组件的data和methods已经初始化完毕，可以访问。但是页面还没有渲染出来，这个生命周期函数中，我们经常会发起ajax请求。
    |
    |经过一系列判断和编译，解析指令，渲染模板页面到内存中，还没到页面上
    |
beforeMount  当模板在内存中编译完成，会立即执行实例创建的第三个生命周期函数。这个函数叫做 beforeMount ,此时内存中的模板结构还没有渲染到页面上，此时页面上看不到真实的数据。此时用户看到的只是一个模板页面，没有真正的数据。
    |
    |这一步正在把内存中渲染好的木板结构替换到页面上
    |
mounted 这是mounted，是组件创建阶段最后一个生命周期函数。此时，页面已经真正的渲染好了，用户已经可以看到真实的页面数据了。当这个生命周期函数执行完，组件就离开了创建阶段，折辱到运行中的阶段。如果大家用到了一些第三方UI插件，而且这个插件还需要被初始化，那么必须在mounted中来初始化插件。

*****以上为组件生命周期创建过程****
*****下面过组件运行中的生命周期函数****
    |
    | when data changed 组件运行中的生命周期函数会根据data 数据的变化，有选择性的触发 0 次或者 n次
    |
    beforeUpdate 当执行beforeUpdate 运行中生命周期函数的时候，数据肯定是新的，但是页面上的数据还是旧的。
    |
    | 正在根据最新的 data数据，重新渲染内存中的模板结构，并把渲染好的模板结构，替换到页面上
    |
    updated  页面已经完成更新，此时data数据是最新的同时，页面上呈现的数据也是最新的





当data数据变化，页面更新的3步
1、拿到最新的data数据
2、根据最新的data数据，在内存中，重新渲染最新的DOM树
3、把旧的页面移除，同时把新的DOM树渲染出来



    |
    | beforeDestory 当执行这个生命周期函数的时候，组件即将被销毁，但是还么有真正的开始，此时组件是可以正常使用的，data，methods等数据和方法依然可以正常访问。
    |
    | 销毁过程
    |
    destoryed 组件已经完成销毁，此时组件已经废了，data 和methods 已经不能用了

